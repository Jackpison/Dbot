{"ast":null,"code":"var _templateObject = _taggedTemplateLiteralLoose([\"\\n  fill: \", \";\\n\"], [\"\\n  fill: \", \";\\n\"]);\n\nfunction _taggedTemplateLiteralLoose(strings, raw) {\n  strings.raw = raw;\n  return strings;\n}\n\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nvar Label = styled.g(_templateObject, function (props) {\n  return props.color;\n});\n\nvar Labels = function Labels(_ref) {\n  var getX = _ref.getX,\n      getY = _ref.getY,\n      labelsColor = _ref.labelsColor,\n      labelsCountY = _ref.labelsCountY,\n      labelsFormatX = _ref.labelsFormatX,\n      labelsFormatY = _ref.labelsFormatY,\n      labelsHeightX = _ref.labelsHeightX,\n      labelsOffsetX = _ref.labelsOffsetX,\n      labelsOffsetY = _ref.labelsOffsetY,\n      labelsStepX = _ref.labelsStepX,\n      labelsVisible = _ref.labelsVisible,\n      maxX = _ref.maxX,\n      maxY = _ref.maxY,\n      minX = _ref.minX;\n\n  if (labelsVisible) {\n    var xLabels = void 0;\n    var yLabels = void 0;\n    var xLabelsRange = [];\n    var xStep = labelsStepX > 0 ? labelsStepX : 1;\n\n    for (var i = Math.floor(minX); i <= Math.ceil(maxX); i += xStep) {\n      xLabelsRange.push(i);\n    }\n\n    xLabels = xLabelsRange.map(function (x) {\n      return React.createElement(Label, {\n        key: x,\n        color: labelsColor\n      }, React.createElement(\"circle\", {\n        r: \"2\",\n        cx: getX(x),\n        cy: getY(0)\n      }), React.createElement(\"text\", {\n        x: getX(x),\n        y: getY(0) + labelsHeightX,\n        transform: \"translate(0, \" + labelsOffsetX + \")\",\n        textAnchor: \"middle\"\n      }, labelsFormatX(x)));\n    });\n    var yLabelsRange = [];\n    var yStep = labelsCountY > 0 ? labelsCountY : 1;\n\n    for (var _i = 0; _i <= maxY; _i += Math.floor(maxY / yStep)) {\n      yLabelsRange.push(_i);\n    }\n\n    yLabels = yLabelsRange.map(function (y) {\n      return React.createElement(Label, {\n        key: y,\n        color: labelsColor\n      }, React.createElement(\"circle\", {\n        r: \"2\",\n        cx: getX(minX),\n        cy: getY(y)\n      }), React.createElement(\"text\", {\n        x: getX(minX),\n        y: getY(y) + labelsHeightX / 2,\n        transform: \"translate(-\" + labelsOffsetY + \", 0)\",\n        textAnchor: \"end\"\n      }, labelsFormatY(y)));\n    });\n    return React.createElement(\"g\", null, xLabels && React.createElement(\"g\", null, xLabels), yLabels && React.createElement(\"g\", null, yLabels));\n  } else {\n    return null;\n  }\n};\n\nLabels.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  getX: PropTypes.func,\n  getY: PropTypes.func,\n  labelsColor: PropTypes.string,\n  labelsCountY: PropTypes.number,\n  labelsFormatX: PropTypes.func,\n  labelsFormatY: PropTypes.func,\n  labelsHeightX: PropTypes.number,\n  labelsOffsetX: PropTypes.number,\n  labelsOffsetY: PropTypes.number,\n  labelsStepX: PropTypes.number,\n  labelsVisible: PropTypes.bool,\n  maxX: PropTypes.number,\n  maxY: PropTypes.number,\n  minX: PropTypes.number,\n  minY: PropTypes.number\n} : {};\nLabels.defaultProps = {\n  getX: function getX(x) {\n    return x;\n  },\n  getY: function getY(y) {\n    return y;\n  },\n  labelsCharacterWidth: 10,\n  labelsColor: \"#bdc3c7\",\n  labelsCountY: 5,\n  labelsFormatX: function labelsFormatX(x) {\n    return x;\n  },\n  labelsFormatY: function labelsFormatY(y) {\n    return y;\n  },\n  labelsHeightX: 12,\n  labelsOffsetX: 15,\n  labelsOffsetY: 15,\n  labelsStepX: 2,\n  labelsVisible: true\n};\nexport default Labels;","map":{"version":3,"sources":["D:/Files/DBOT/node_modules/react-svg-line-chart/es/components/Labels/index.js"],"names":["_templateObject","_taggedTemplateLiteralLoose","strings","raw","PropTypes","React","styled","Label","g","props","color","Labels","_ref","getX","getY","labelsColor","labelsCountY","labelsFormatX","labelsFormatY","labelsHeightX","labelsOffsetX","labelsOffsetY","labelsStepX","labelsVisible","maxX","maxY","minX","xLabels","yLabels","xLabelsRange","xStep","i","Math","floor","ceil","push","map","x","createElement","key","r","cx","cy","y","transform","textAnchor","yLabelsRange","yStep","_i","propTypes","process","env","NODE_ENV","func","string","number","bool","minY","defaultProps","labelsCharacterWidth"],"mappings":"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","sourcesContent":["var _templateObject = _taggedTemplateLiteralLoose([\"\\n  fill: \", \";\\n\"], [\"\\n  fill: \", \";\\n\"]);\n\nfunction _taggedTemplateLiteralLoose(strings, raw) { strings.raw = raw; return strings; }\n\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport styled from \"styled-components\";\n\nvar Label = styled.g(_templateObject, function (props) {\n  return props.color;\n});\n\nvar Labels = function Labels(_ref) {\n  var getX = _ref.getX,\n      getY = _ref.getY,\n      labelsColor = _ref.labelsColor,\n      labelsCountY = _ref.labelsCountY,\n      labelsFormatX = _ref.labelsFormatX,\n      labelsFormatY = _ref.labelsFormatY,\n      labelsHeightX = _ref.labelsHeightX,\n      labelsOffsetX = _ref.labelsOffsetX,\n      labelsOffsetY = _ref.labelsOffsetY,\n      labelsStepX = _ref.labelsStepX,\n      labelsVisible = _ref.labelsVisible,\n      maxX = _ref.maxX,\n      maxY = _ref.maxY,\n      minX = _ref.minX;\n\n  if (labelsVisible) {\n    var xLabels = void 0;\n    var yLabels = void 0;\n\n    var xLabelsRange = [];\n    var xStep = labelsStepX > 0 ? labelsStepX : 1;\n\n    for (var i = Math.floor(minX); i <= Math.ceil(maxX); i += xStep) {\n      xLabelsRange.push(i);\n    }\n\n    xLabels = xLabelsRange.map(function (x) {\n      return React.createElement(\n        Label,\n        { key: x, color: labelsColor },\n        React.createElement(\"circle\", { r: \"2\", cx: getX(x), cy: getY(0) }),\n        React.createElement(\n          \"text\",\n          {\n            x: getX(x),\n            y: getY(0) + labelsHeightX,\n            transform: \"translate(0, \" + labelsOffsetX + \")\",\n            textAnchor: \"middle\"\n          },\n          labelsFormatX(x)\n        )\n      );\n    });\n\n    var yLabelsRange = [];\n    var yStep = labelsCountY > 0 ? labelsCountY : 1;\n\n    for (var _i = 0; _i <= maxY; _i += Math.floor(maxY / yStep)) {\n      yLabelsRange.push(_i);\n    }\n\n    yLabels = yLabelsRange.map(function (y) {\n      return React.createElement(\n        Label,\n        { key: y, color: labelsColor },\n        React.createElement(\"circle\", { r: \"2\", cx: getX(minX), cy: getY(y) }),\n        React.createElement(\n          \"text\",\n          {\n            x: getX(minX),\n            y: getY(y) + labelsHeightX / 2,\n            transform: \"translate(-\" + labelsOffsetY + \", 0)\",\n            textAnchor: \"end\"\n          },\n          labelsFormatY(y)\n        )\n      );\n    });\n\n    return React.createElement(\n      \"g\",\n      null,\n      xLabels && React.createElement(\n        \"g\",\n        null,\n        xLabels\n      ),\n      yLabels && React.createElement(\n        \"g\",\n        null,\n        yLabels\n      )\n    );\n  } else {\n    return null;\n  }\n};\n\nLabels.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  getX: PropTypes.func,\n  getY: PropTypes.func,\n  labelsColor: PropTypes.string,\n  labelsCountY: PropTypes.number,\n  labelsFormatX: PropTypes.func,\n  labelsFormatY: PropTypes.func,\n  labelsHeightX: PropTypes.number,\n  labelsOffsetX: PropTypes.number,\n  labelsOffsetY: PropTypes.number,\n  labelsStepX: PropTypes.number,\n  labelsVisible: PropTypes.bool,\n  maxX: PropTypes.number,\n  maxY: PropTypes.number,\n  minX: PropTypes.number,\n  minY: PropTypes.number\n} : {};\n\nLabels.defaultProps = {\n  getX: function getX(x) {\n    return x;\n  },\n  getY: function getY(y) {\n    return y;\n  },\n  labelsCharacterWidth: 10,\n  labelsColor: \"#bdc3c7\",\n  labelsCountY: 5,\n  labelsFormatX: function labelsFormatX(x) {\n    return x;\n  },\n  labelsFormatY: function labelsFormatY(y) {\n    return y;\n  },\n  labelsHeightX: 12,\n  labelsOffsetX: 15,\n  labelsOffsetY: 15,\n  labelsStepX: 2,\n  labelsVisible: true\n};\n\nexport default Labels;"]},"metadata":{},"sourceType":"module"}