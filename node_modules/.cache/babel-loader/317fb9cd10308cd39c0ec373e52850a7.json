{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\Files\\\\DBOT\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\Files\\\\DBOT\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport Web3 from 'web3';\nexport var GetWeb3 = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n    var web3;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!window.ethereum) {\n              _context.next = 6;\n              break;\n            }\n\n            web3 = new Web3(window.ethereum);\n            _context.next = 4;\n            return window.ethereum.enable();\n\n          case 4:\n            _context.next = 7;\n            break;\n\n          case 6:\n            if (window.web3) {\n              web3 = new Web3(window.web3.currentProvider);\n            } else {\n              window.alert(\"Non ethereum browser. Please add Metamask extention to chrome and try again.\");\n            }\n\n          case 7:\n            return _context.abrupt(\"return\", web3);\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function GetWeb3(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var loadAccount = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(web3, dispatch) {\n    var accounts, account;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return web3.eth.getAccounts();\n\n          case 2:\n            accounts = _context2.sent;\n            account = accounts[0]; //dispatch(web3AccountLoaded(account))\n\n            return _context2.abrupt(\"return\", account);\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function loadAccount(_x2, _x3) {\n    return _ref2.apply(this, arguments);\n  };\n}();","map":{"version":3,"sources":["D:/Files/DBOT/src/store/web3.js"],"names":["Web3","GetWeb3","dispatch","window","ethereum","web3","enable","currentProvider","alert","loadAccount","eth","getAccounts","accounts","account"],"mappings":";;AAAA,OAAOA,IAAP,MAAiB,MAAjB;AAEA,OAAO,IAAMC,OAAO;AAAA,sEAAG,iBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAEjBC,MAAM,CAACC,QAFU;AAAA;AAAA;AAAA;;AAGnBC,YAAAA,IAAI,GAAG,IAAIL,IAAJ,CAASG,MAAM,CAACC,QAAhB,CAAP;AAHmB;AAAA,mBAIbD,MAAM,CAACC,QAAP,CAAgBE,MAAhB,EAJa;;AAAA;AAAA;AAAA;;AAAA;AAMhB,gBAAIH,MAAM,CAACE,IAAX,EAAiB;AACpBA,cAAAA,IAAI,GAAG,IAAIL,IAAJ,CAASG,MAAM,CAACE,IAAP,CAAYE,eAArB,CAAP;AACD,aAFI,MAGA;AACHJ,cAAAA,MAAM,CAACK,KAAP,CAAa,8EAAb;AACD;;AAXoB;AAAA,6CAadH,IAbc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAPJ,OAAO;AAAA;AAAA;AAAA,GAAb;AAgBP,OAAO,IAAMQ,WAAW;AAAA,uEAAG,kBAAOJ,IAAP,EAAaH,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACFG,IAAI,CAACK,GAAL,CAASC,WAAT,EADE;;AAAA;AACnBC,YAAAA,QADmB;AAEnBC,YAAAA,OAFmB,GAETD,QAAQ,CAAC,CAAD,CAFC,EAGzB;;AAHyB,8CAIlBC,OAJkB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAXJ,WAAW;AAAA;AAAA;AAAA,GAAjB","sourcesContent":["import Web3 from 'web3'\r\n\r\nexport const GetWeb3 = async (dispatch) => {\r\n  let web3\r\n  if (window.ethereum) {\r\n    web3 = new Web3(window.ethereum)\r\n    await window.ethereum.enable()\r\n  }\r\n  else if (window.web3) {\r\n    web3 = new Web3(window.web3.currentProvider)\r\n  }\r\n  else {\r\n    window.alert(\"Non ethereum browser. Please add Metamask extention to chrome and try again.\")\r\n  }\r\n  //dispatch(web3Loaded(web3))\r\n  return web3\r\n}\r\n\r\nexport const loadAccount = async (web3, dispatch) => {\r\n  const accounts = await web3.eth.getAccounts()\r\n  const account = accounts[0]\r\n  //dispatch(web3AccountLoaded(account))\r\n  return account\r\n}\r\n"]},"metadata":{},"sourceType":"module"}