{"ast":null,"code":"import _toConsumableArray from \"D:\\\\Files\\\\DBOT\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"D:\\\\Files\\\\DBOT\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"D:\\\\Files\\\\DBOT\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"D:\\\\Files\\\\DBOT\\\\src\\\\routes\\\\dashboard\\\\TasksComponent.js\";\nimport React, { useState } from 'react';\nimport { Row } from 'simple-flexbox';\nimport { createUseStyles, useTheme } from 'react-jss';\nimport { IconCheckboxOn, IconCheckboxOff } from '../../assets/icons';\nimport CardComponent from '../../components/cards/CardComponent';\nvar useStyles = createUseStyles(function (theme) {\n  return {\n    addButton: {\n      backgroundColor: theme.color.lightGrayishBlue,\n      color: theme.color.grayishBlue2,\n      fontSize: '20px !important',\n      padding: '7px !important'\n    },\n    itemTitle: _objectSpread(_objectSpread({}, theme.typography.itemTitle), {}, {\n      color: theme.color.veryDarkGrayishBlue\n    }),\n    itemValue: {\n      color: theme.color.grayishBlue2\n    },\n    greyTitle: {\n      color: theme.color.grayishBlue3\n    },\n    tagStyles: {\n      borderRadius: 5,\n      cursor: 'pointer',\n      fontWeight: 'bold',\n      fontSize: 11,\n      letterSpacing: '0.5px',\n      lineHeight: '14px',\n      padding: '5px 12px 5px 12px'\n    },\n    checkboxWrapper: {\n      cursor: 'pointer',\n      marginRight: 16\n    }\n  };\n});\nvar TAGS = {\n  URGENT: {\n    text: 'URGENT',\n    backgroundColor: '#FEC400',\n    color: '#FFFFFF'\n  },\n  NEW: {\n    text: 'NEW',\n    backgroundColor: '#29CC97',\n    color: '#FFFFFF'\n  },\n  DEFAULT: {\n    text: 'DEFAULT',\n    backgroundColor: '#F0F1F7',\n    color: '#9FA2B4'\n  }\n};\n\nfunction TasksComponent(props) {\n  var _this = this;\n\n  var theme = useTheme();\n  var classes = useStyles({\n    theme\n  });\n\n  var _useState = useState([{\n    title: 'Finish ticket update',\n    checked: false,\n    tag: TAGS.URGENT\n  }, {\n    title: 'Create new ticket example',\n    checked: false,\n    tag: TAGS.NEW\n  }, {\n    title: 'Update ticket report',\n    checked: true,\n    tag: TAGS.DEFAULT\n  }]),\n      _useState2 = _slicedToArray(_useState, 2),\n      items = _useState2[0],\n      setItems = _useState2[1];\n\n  function onCheckboxClick(index) {\n    setItems(function (prev) {\n      var newItems = _toConsumableArray(prev);\n\n      newItems[index].checked = newItems[index].checked ? false : true;\n      return newItems;\n    });\n  }\n\n  function getNextTag() {\n    var current = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'URGENT';\n    var tagLabels = ['URGENT', 'NEW', 'DEFAULT'];\n    var tagIndex = (tagLabels.indexOf(current) + 1) % 3;\n    return TAGS[tagLabels[tagIndex]];\n  }\n\n  function onTagClick(index) {\n    setItems(function (prev) {\n      var newItems = _toConsumableArray(prev);\n\n      newItems[index].tag = getNextTag(newItems[index].tag.text);\n      return newItems;\n    });\n  }\n\n  function onAddButtonClick() {\n    setItems(function (prev) {\n      var newItems = _toConsumableArray(prev);\n\n      newItems.push({\n        title: \"Task \".concat(newItems.length + 1),\n        checked: false,\n        tag: getNextTag()\n      });\n      return newItems;\n    });\n  }\n\n  function renderAddButton() {\n    return /*#__PURE__*/React.createElement(Row, {\n      horizontal: \"center\",\n      vertical: \"center\",\n      className: [classes.tagStyles, classes.addButton].join(' '),\n      onClick: onAddButtonClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }\n    }, \"+\");\n  }\n\n  return /*#__PURE__*/React.createElement(CardComponent, {\n    containerStyles: props.containerStyles,\n    title: \"Tasks\",\n    link: \"View all\",\n    subtitle: \"Today\",\n    items: [/*#__PURE__*/React.createElement(Row, {\n      horizontal: \"space-between\",\n      vertical: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: [classes.itemTitle, classes.greyTitle].join(' '),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 21\n      }\n    }, \"Create new task\"), renderAddButton())].concat(_toConsumableArray(items.map(function (item, index) {\n      return /*#__PURE__*/React.createElement(TaskComponent, {\n        classes: classes,\n        index: index,\n        item: item,\n        onCheckboxClick: onCheckboxClick,\n        onTagClick: onTagClick,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }\n      });\n    }))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  });\n}\n\nfunction TaskComponent(_ref) {\n  var classes = _ref.classes,\n      index = _ref.index,\n      _ref$item = _ref.item,\n      item = _ref$item === void 0 ? {} : _ref$item,\n      onCheckboxClick = _ref.onCheckboxClick,\n      onTagClick = _ref.onTagClick;\n  var _item$tag = item.tag,\n      tag = _item$tag === void 0 ? {} : _item$tag;\n  return /*#__PURE__*/React.createElement(Row, {\n    horizontal: \"space-between\",\n    vertical: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.checkboxWrapper,\n    onClick: function onClick() {\n      return onCheckboxClick(index);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 17\n    }\n  }, item.checked ? /*#__PURE__*/React.createElement(IconCheckboxOn, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 37\n    }\n  }) : /*#__PURE__*/React.createElement(IconCheckboxOff, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 58\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.itemTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 17\n    }\n  }, item.title)), /*#__PURE__*/React.createElement(TagComponent, {\n    backgroundColor: tag.backgroundColor,\n    classes: classes,\n    color: tag.color,\n    index: index,\n    onClick: onTagClick,\n    text: tag.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }\n  }));\n}\n\nfunction TagComponent(_ref2) {\n  var backgroundColor = _ref2.backgroundColor,\n      classes = _ref2.classes,\n      color = _ref2.color,\n      index = _ref2.index,\n      _onClick = _ref2.onClick,\n      text = _ref2.text;\n  return /*#__PURE__*/React.createElement(Row, {\n    horizontal: \"center\",\n    vertical: \"center\",\n    style: {\n      backgroundColor,\n      color\n    },\n    className: classes.tagStyles,\n    onClick: function onClick() {\n      return _onClick(index);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }\n  }, text);\n}\n\nexport default TasksComponent;","map":{"version":3,"sources":["D:/Files/DBOT/src/routes/dashboard/TasksComponent.js"],"names":["React","useState","Row","createUseStyles","useTheme","IconCheckboxOn","IconCheckboxOff","CardComponent","useStyles","theme","addButton","backgroundColor","color","lightGrayishBlue","grayishBlue2","fontSize","padding","itemTitle","typography","veryDarkGrayishBlue","itemValue","greyTitle","grayishBlue3","tagStyles","borderRadius","cursor","fontWeight","letterSpacing","lineHeight","checkboxWrapper","marginRight","TAGS","URGENT","text","NEW","DEFAULT","TasksComponent","props","classes","title","checked","tag","items","setItems","onCheckboxClick","index","prev","newItems","getNextTag","current","tagLabels","tagIndex","indexOf","onTagClick","onAddButtonClick","push","length","renderAddButton","join","containerStyles","map","item","TaskComponent","TagComponent","onClick"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Row } from 'simple-flexbox';\nimport { createUseStyles, useTheme } from 'react-jss';\nimport { IconCheckboxOn, IconCheckboxOff } from '../../assets/icons';\nimport CardComponent from '../../components/cards/CardComponent';\n\nconst useStyles = createUseStyles((theme) => ({\n    addButton: {\n        backgroundColor: theme.color.lightGrayishBlue,\n        color: theme.color.grayishBlue2,\n        fontSize: '20px !important',\n        padding: '7px !important'\n    },\n    itemTitle: {\n        ...theme.typography.itemTitle,\n        color: theme.color.veryDarkGrayishBlue\n    },\n    itemValue: {\n        color: theme.color.grayishBlue2\n    },\n    greyTitle: {\n        color: theme.color.grayishBlue3\n    },\n    tagStyles: {\n        borderRadius: 5,\n        cursor: 'pointer',\n        fontWeight: 'bold',\n        fontSize: 11,\n        letterSpacing: '0.5px',\n        lineHeight: '14px',\n        padding: '5px 12px 5px 12px'\n    },\n    checkboxWrapper: {\n        cursor: 'pointer',\n        marginRight: 16\n    }\n}));\n\nconst TAGS = {\n    URGENT: { text: 'URGENT', backgroundColor: '#FEC400', color: '#FFFFFF' },\n    NEW: { text: 'NEW', backgroundColor: '#29CC97', color: '#FFFFFF' },\n    DEFAULT: { text: 'DEFAULT', backgroundColor: '#F0F1F7', color: '#9FA2B4' }\n};\n\nfunction TasksComponent(props) {\n    const theme = useTheme();\n    const classes = useStyles({ theme });\n    const [items, setItems] = useState([\n        { title: 'Finish ticket update', checked: false, tag: TAGS.URGENT },\n        {\n            title: 'Create new ticket example',\n            checked: false,\n            tag: TAGS.NEW\n        },\n        { title: 'Update ticket report', checked: true, tag: TAGS.DEFAULT }\n    ]);\n\n    function onCheckboxClick(index) {\n        setItems((prev) => {\n            const newItems = [...prev];\n            newItems[index].checked = newItems[index].checked ? false : true;\n            return newItems;\n        });\n    }\n    function getNextTag(current = 'URGENT') {\n        const tagLabels = ['URGENT', 'NEW', 'DEFAULT'];\n        const tagIndex = (tagLabels.indexOf(current) + 1) % 3;\n        return TAGS[tagLabels[tagIndex]];\n    }\n\n    function onTagClick(index) {\n        setItems((prev) => {\n            const newItems = [...prev];\n            newItems[index].tag = getNextTag(newItems[index].tag.text);\n            return newItems;\n        });\n    }\n\n    function onAddButtonClick() {\n        setItems((prev) => {\n            const newItems = [...prev];\n            newItems.push({\n                title: `Task ${newItems.length + 1}`,\n                checked: false,\n                tag: getNextTag()\n            });\n            return newItems;\n        });\n    }\n\n    function renderAddButton() {\n        return (\n            <Row\n                horizontal='center'\n                vertical='center'\n                className={[classes.tagStyles, classes.addButton].join(' ')}\n                onClick={onAddButtonClick}\n            >\n                +\n            </Row>\n        );\n    }\n\n    return (\n        <CardComponent\n            containerStyles={props.containerStyles}\n            title='Tasks'\n            link='View all'\n            subtitle='Today'\n            items={[\n                <Row horizontal='space-between' vertical='center'>\n                    <span className={[classes.itemTitle, classes.greyTitle].join(' ')}>\n                        Create new task\n                    </span>\n                    {renderAddButton()}\n                </Row>,\n                ...items.map((item, index) => (\n                    <TaskComponent\n                        classes={classes}\n                        index={index}\n                        item={item}\n                        onCheckboxClick={onCheckboxClick}\n                        onTagClick={onTagClick}\n                    />\n                ))\n            ]}\n        />\n    );\n}\n\nfunction TaskComponent({ classes, index, item = {}, onCheckboxClick, onTagClick }) {\n    const { tag = {} } = item;\n    return (\n        <Row horizontal='space-between' vertical='center'>\n            <Row>\n                <div className={classes.checkboxWrapper} onClick={() => onCheckboxClick(index)}>\n                    {item.checked ? <IconCheckboxOn /> : <IconCheckboxOff />}\n                </div>\n                <span className={classes.itemTitle}>{item.title}</span>\n            </Row>\n            <TagComponent\n                backgroundColor={tag.backgroundColor}\n                classes={classes}\n                color={tag.color}\n                index={index}\n                onClick={onTagClick}\n                text={tag.text}\n            />\n        </Row>\n    );\n}\n\nfunction TagComponent({ backgroundColor, classes, color, index, onClick, text }) {\n    return (\n        <Row\n            horizontal='center'\n            vertical='center'\n            style={{ backgroundColor, color }}\n            className={classes.tagStyles}\n            onClick={() => onClick(index)}\n        >\n            {text}\n        </Row>\n    );\n}\n\nexport default TasksComponent;\n"]},"metadata":{},"sourceType":"module"}