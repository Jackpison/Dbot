{"ast":null,"code":"var _templateObject = _taggedTemplateLiteralLoose([\"\\n  opacity: \", \";\\n  stroke-width: \", \";\\n  stroke: \", \";\\n\"], [\"\\n  opacity: \", \";\\n  stroke-width: \", \";\\n  stroke: \", \";\\n\"]);\n\nfunction _taggedTemplateLiteralLoose(strings, raw) {\n  strings.raw = raw;\n  return strings;\n}\n\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nvar Wrapper = styled.g(_templateObject, function (props) {\n  return props.opacity;\n}, function (props) {\n  return props.width;\n}, function (props) {\n  return props.color;\n});\n\nvar Grid = function Grid(_ref) {\n  var getX = _ref.getX,\n      getY = _ref.getY,\n      gridColor = _ref.gridColor,\n      gridOpacity = _ref.gridOpacity,\n      gridVisible = _ref.gridVisible,\n      gridWidth = _ref.gridWidth,\n      labelsCountY = _ref.labelsCountY,\n      maxX = _ref.maxX,\n      maxY = _ref.maxY,\n      minX = _ref.minX,\n      minY = _ref.minY;\n\n  if (gridVisible) {\n    var gridX = [];\n    var gridY = [];\n\n    for (var i = minX; i <= maxX; i++) {\n      gridX.push(React.createElement(\"line\", {\n        key: i,\n        x1: getX(i),\n        y1: getY(minY),\n        x2: getX(i),\n        y2: getY(maxY)\n      }));\n    }\n\n    var yStep = labelsCountY > 0 ? labelsCountY : 1;\n\n    for (var _i = minY; _i <= maxY; _i += Math.floor(maxY / yStep)) {\n      gridY.push(React.createElement(\"line\", {\n        key: _i,\n        x1: getX(minX),\n        y1: getY(_i),\n        x2: getX(maxX),\n        y2: getY(_i)\n      }));\n    }\n\n    return React.createElement(Wrapper, {\n      color: gridColor,\n      width: gridWidth,\n      opacity: gridOpacity\n    }, gridX, gridY);\n  } else {\n    return null;\n  }\n};\n\nGrid.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  getX: PropTypes.func,\n  getY: PropTypes.func,\n  gridColor: PropTypes.string,\n  gridOpacity: PropTypes.number,\n  gridVisible: PropTypes.bool,\n  gridWidth: PropTypes.number,\n  labelsCountY: PropTypes.number,\n  maxX: PropTypes.number,\n  maxY: PropTypes.number,\n  minX: PropTypes.number,\n  minY: PropTypes.number\n} : {};\nGrid.defaultProps = {\n  getX: function getX(x) {\n    return x;\n  },\n  getY: function getY(y) {\n    return y;\n  },\n  gridColor: \"#34495e\",\n  gridOpacity: 0.2,\n  gridVisible: true,\n  gridWidth: 1,\n  labelsCountY: 5\n};\nexport default Grid;","map":{"version":3,"sources":["D:/Files/DBOT/node_modules/react-svg-line-chart/es/components/Grid/index.js"],"names":["_templateObject","_taggedTemplateLiteralLoose","strings","raw","PropTypes","React","styled","Wrapper","g","props","opacity","width","color","Grid","_ref","getX","getY","gridColor","gridOpacity","gridVisible","gridWidth","labelsCountY","maxX","maxY","minX","minY","gridX","gridY","i","push","createElement","key","x1","y1","x2","y2","yStep","_i","Math","floor","propTypes","process","env","NODE_ENV","func","string","number","bool","defaultProps","x","y"],"mappings":"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","sourcesContent":["var _templateObject = _taggedTemplateLiteralLoose([\"\\n  opacity: \", \";\\n  stroke-width: \", \";\\n  stroke: \", \";\\n\"], [\"\\n  opacity: \", \";\\n  stroke-width: \", \";\\n  stroke: \", \";\\n\"]);\n\nfunction _taggedTemplateLiteralLoose(strings, raw) { strings.raw = raw; return strings; }\n\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport styled from \"styled-components\";\n\nvar Wrapper = styled.g(_templateObject, function (props) {\n  return props.opacity;\n}, function (props) {\n  return props.width;\n}, function (props) {\n  return props.color;\n});\n\nvar Grid = function Grid(_ref) {\n  var getX = _ref.getX,\n      getY = _ref.getY,\n      gridColor = _ref.gridColor,\n      gridOpacity = _ref.gridOpacity,\n      gridVisible = _ref.gridVisible,\n      gridWidth = _ref.gridWidth,\n      labelsCountY = _ref.labelsCountY,\n      maxX = _ref.maxX,\n      maxY = _ref.maxY,\n      minX = _ref.minX,\n      minY = _ref.minY;\n\n  if (gridVisible) {\n    var gridX = [];\n    var gridY = [];\n\n    for (var i = minX; i <= maxX; i++) {\n      gridX.push(React.createElement(\"line\", {\n        key: i,\n        x1: getX(i),\n        y1: getY(minY),\n        x2: getX(i),\n        y2: getY(maxY)\n      }));\n    }\n\n    var yStep = labelsCountY > 0 ? labelsCountY : 1;\n    for (var _i = minY; _i <= maxY; _i += Math.floor(maxY / yStep)) {\n      gridY.push(React.createElement(\"line\", {\n        key: _i,\n        x1: getX(minX),\n        y1: getY(_i),\n        x2: getX(maxX),\n        y2: getY(_i)\n      }));\n    }\n\n    return React.createElement(\n      Wrapper,\n      { color: gridColor, width: gridWidth, opacity: gridOpacity },\n      gridX,\n      gridY\n    );\n  } else {\n    return null;\n  }\n};\n\nGrid.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  getX: PropTypes.func,\n  getY: PropTypes.func,\n  gridColor: PropTypes.string,\n  gridOpacity: PropTypes.number,\n  gridVisible: PropTypes.bool,\n  gridWidth: PropTypes.number,\n  labelsCountY: PropTypes.number,\n  maxX: PropTypes.number,\n  maxY: PropTypes.number,\n  minX: PropTypes.number,\n  minY: PropTypes.number\n} : {};\n\nGrid.defaultProps = {\n  getX: function getX(x) {\n    return x;\n  },\n  getY: function getY(y) {\n    return y;\n  },\n  gridColor: \"#34495e\",\n  gridOpacity: 0.2,\n  gridVisible: true,\n  gridWidth: 1,\n  labelsCountY: 5\n};\n\nexport default Grid;"]},"metadata":{},"sourceType":"module"}