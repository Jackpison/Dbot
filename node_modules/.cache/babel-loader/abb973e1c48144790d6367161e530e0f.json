{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\Files\\\\DBOT\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\Files\\\\DBOT\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"D:\\\\Files\\\\DBOT\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Files\\\\DBOT\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"D:\\\\Files\\\\DBOT\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"D:\\\\Files\\\\DBOT\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"D:\\\\Files\\\\DBOT\\\\src\\\\routes\\\\approve\\\\ApproveComponent.js\";\nimport React, { Component } from 'react';\nimport { Button } from 'react-bootstrap';\nimport '../../components/App.css';\nimport { GetWeb3 } from '../../store/web3';\n\nrequire('dotenv').config();\n\nvar Web3 = require('web3');\n\nvar _require = require('@uniswap/sdk'),\n    ChainId = _require.ChainId,\n    Fetcher = _require.Fetcher,\n    WETH = _require.WETH,\n    Route = _require.Route,\n    Trade = _require.Trade,\n    TokenAmount = _require.TokenAmount,\n    TradeType = _require.TradeType,\n    Percent = _require.Percent,\n    Pair = _require.Pair;\n\nvar ethers = require('ethers');\n\nvar web3;\nvar web3HD;\nvar GAS_PRICE;\nvar provider;\nvar signer;\nvar tokenContract;\nvar chainId = ChainId.MAINNET;\nvar EXCHANGE_ADDRESS = '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D';\nvar TOKEN_ADDRESS;\n\nvar ApproveComponent = /*#__PURE__*/function (_Component) {\n  _inherits(ApproveComponent, _Component);\n\n  var _super = _createSuper(ApproveComponent);\n\n  function ApproveComponent(props) {\n    var _this;\n\n    _classCallCheck(this, ApproveComponent);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      account: '',\n      gasprice: 0,\n      tokenAddress: '',\n      botstatus: '',\n      transactions: []\n    };\n    return _this;\n  }\n\n  _createClass(ApproveComponent, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.loadblockchain();\n    }\n  }, {\n    key: \"loadblockchain\",\n    value: function () {\n      var _loadblockchain = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var accounts, privateKey;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return GetWeb3();\n\n              case 2:\n                window.web3 = _context.sent;\n                _context.next = 5;\n                return window.web3.eth.getAccounts();\n\n              case 5:\n                accounts = _context.sent;\n                this.setState({\n                  account: accounts[0]\n                });\n                console.log(this.state.account); // WEB3 CONFIG\n\n                web3 = new Web3(process.env.REACT_APP_RPC_WEB_SCOKET);\n                web3HD = new Web3(new Web3.providers.HttpProvider(process.env.REACT_APP_RPC_HTTP));\n                provider = new ethers.getDefaultProvider(process.env.REACT_APP_RPC_HTTP);\n                privateKey = new Buffer.from(process.env.REACT_APP_PRIVATE_KEY, \"hex\");\n                signer = new ethers.Wallet(privateKey, provider);\n\n              case 13:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function loadblockchain() {\n        return _loadblockchain.apply(this, arguments);\n      }\n\n      return loadblockchain;\n    }()\n  }, {\n    key: \"start\",\n    value: function () {\n      var _start = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var gasLimit, TOKENS, gasPrice, newGasPrice, approve, botstatus;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                TOKEN_ADDRESS = this.state.tokenAddress; // declare the token contract interfaces\n\n                tokenContract = new ethers.Contract(TOKEN_ADDRESS, ['function balanceOf(address owner) external view returns (uint)', 'function decimals() external view returns (uint8)', 'function approve(address spender, uint value) external returns (bool)'], signer);\n                gasLimit = 400000;\n                TOKENS = web3HD.utils.toHex('115792089237316195423570985008687907853269984665640564039457584007913129639935');\n                _context2.next = 6;\n                return web3HD.eth.getGasPrice();\n\n              case 6:\n                gasPrice = _context2.sent;\n                newGasPrice = Math.floor(gasPrice * 1.4);\n                _context2.next = 10;\n                return tokenContract.approve(EXCHANGE_ADDRESS, TOKENS, {\n                  gasPrice: ethers.BigNumber.from(newGasPrice).toHexString(),\n                  gasLimit: ethers.BigNumber.from(gasLimit).toHexString()\n                });\n\n              case 10:\n                approve = _context2.sent;\n                console.log('approve tx: ', approve.hash);\n                botstatus = 'Approve Transaction Hash: ' + approve.hash;\n                this.setState({\n                  botstatus: botstatus\n                });\n\n              case 14:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function start() {\n        return _start.apply(this, arguments);\n      }\n\n      return start;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/React.createElement(\"form\", {\n        className: \"mb-4\",\n        onSubmit: function onSubmit(event) {\n          event.preventDefault();\n\n          _this2.start();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 24\n        }\n      }, \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0Token Address\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\")), /*#__PURE__*/React.createElement(\"input\", {\n        className: \"form-control form-control-lg\",\n        type: \"text\",\n        value: this.state.value,\n        onChange: function onChange(event) {\n          _this2.setState({\n            tokenAddress: _this2.tokenAddress.value\n          });\n        },\n        ref: function ref(tokenAddress) {\n          _this2.tokenAddress = tokenAddress;\n        },\n        placeholder: \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 17\n        }\n      }, \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", this.state.tokenAddress)), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"float-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 17\n        }\n      }, \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", /*#__PURE__*/React.createElement(Button, {\n        type: \"submit\",\n        variant: \"success\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }\n      }, \"Approve\"))), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 18\n        }\n      }, \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", this.state.botstatus))));\n    }\n  }]);\n\n  return ApproveComponent;\n}(Component);\n\nexport default ApproveComponent;","map":{"version":3,"sources":["D:/Files/DBOT/src/routes/approve/ApproveComponent.js"],"names":["React","Component","Button","GetWeb3","require","config","Web3","ChainId","Fetcher","WETH","Route","Trade","TokenAmount","TradeType","Percent","Pair","ethers","web3","web3HD","GAS_PRICE","provider","signer","tokenContract","chainId","MAINNET","EXCHANGE_ADDRESS","TOKEN_ADDRESS","ApproveComponent","props","state","account","gasprice","tokenAddress","botstatus","transactions","loadblockchain","window","eth","getAccounts","accounts","setState","console","log","process","env","REACT_APP_RPC_WEB_SCOKET","providers","HttpProvider","REACT_APP_RPC_HTTP","getDefaultProvider","privateKey","Buffer","from","REACT_APP_PRIVATE_KEY","Wallet","Contract","gasLimit","TOKENS","utils","toHex","getGasPrice","gasPrice","newGasPrice","Math","floor","approve","BigNumber","toHexString","hash","event","preventDefault","start","value"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Button } from 'react-bootstrap';\nimport '../../components/App.css';\nimport { GetWeb3 } from '../../store/web3';\nrequire('dotenv').config();\nconst Web3 = require('web3');\nconst { ChainId, Fetcher, WETH, Route, Trade, TokenAmount, TradeType, Percent, Pair } = require('@uniswap/sdk');\nconst ethers = require('ethers');\n\nlet web3;\nlet web3HD;\nlet GAS_PRICE;\nlet provider;\nlet signer;\nlet tokenContract;\nconst chainId = ChainId.MAINNET;\nconst EXCHANGE_ADDRESS = '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D';\nlet TOKEN_ADDRESS;\n\nclass ApproveComponent extends Component { \n    constructor(props){\n        super(props)\n        this.state = {\n            account: '',\n            gasprice: 0,\n            tokenAddress: '',\n            botstatus: '',\n            transactions: []\n        }\n    }\n\n    componentWillMount() {\n        this.loadblockchain()\n    }\n    \n    async loadblockchain() {\n        window.web3 = await GetWeb3();\n        const accounts = await window.web3.eth.getAccounts();\n        this.setState({account: accounts[0]});\n        console.log(this.state.account);\n        \n        // WEB3 CONFIG\n        web3 = new Web3(process.env.REACT_APP_RPC_WEB_SCOKET);\n        web3HD = new Web3(new Web3.providers.HttpProvider(process.env.REACT_APP_RPC_HTTP));\n        provider = new ethers.getDefaultProvider(process.env.REACT_APP_RPC_HTTP);\n        const privateKey = new Buffer.from(process.env.REACT_APP_PRIVATE_KEY, \"hex\");\n        signer = new ethers.Wallet(privateKey, provider);\n    }\n\n    async start(){\n        TOKEN_ADDRESS = this.state.tokenAddress;    \n        // declare the token contract interfaces\n        tokenContract = new ethers.Contract(\n            TOKEN_ADDRESS,\n            ['function balanceOf(address owner) external view returns (uint)',\n            'function decimals() external view returns (uint8)',\n            'function approve(address spender, uint value) external returns (bool)'],\n            signer\n        );\n        const gasLimit = 400000;\n        const TOKENS = web3HD.utils.toHex('115792089237316195423570985008687907853269984665640564039457584007913129639935');\n        const gasPrice = await web3HD.eth.getGasPrice();\n        const newGasPrice = Math.floor(gasPrice * 1.4);\n\n        const approve = await tokenContract.approve(\n            EXCHANGE_ADDRESS, \n            TOKENS,\n            { \n                gasPrice: ethers.BigNumber.from(newGasPrice).toHexString(),\n                gasLimit: ethers.BigNumber.from(gasLimit).toHexString()\n            }\n        );\n        console.log('approve tx: ', approve.hash);\n        const botstatus = 'Approve Transaction Hash: ' + approve.hash\n        this.setState({botstatus: botstatus});\n    }\n\n    render() {\n        return (\n        <form className=\"mb-4\" onSubmit={(event) => {\n            event.preventDefault()\n            this.start()\n          }}>\n        <div>              \n            <div>\n                <label><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Token Address&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</b></label>\n                <input\n                className=\"form-control form-control-lg\"\n                type=\"text\"\n                value={this.state.value}\n                onChange={(event) => {\n                    this.setState({tokenAddress: this.tokenAddress.value})\n                }}\n                ref={(tokenAddress) => { this.tokenAddress = tokenAddress }}\n                placeholder=\"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\"\n                required />\n                <br />\n                <span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{this.state.tokenAddress}</span>\n            </div>\n            <br />\n            <br />\n            <div>\n                <span className=\"float-center\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                    <Button type=\"submit\" variant=\"success\">Approve</Button>\n                </span>\n            </div>\n            <br />\n            <div><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{this.state.botstatus}</b></div>\n        </div>\n        </form>\n        )\n    }\n}\n\nexport default ApproveComponent;\n"]},"metadata":{},"sourceType":"module"}