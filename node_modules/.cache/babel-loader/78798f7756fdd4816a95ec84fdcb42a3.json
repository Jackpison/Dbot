{"ast":null,"code":"import _slicedToArray from \"D:\\\\Files\\\\DBOT\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Files\\\\DBOT\\\\src\\\\hooks\\\\useSidebar.js\";\nimport React, { useState, useEffect, useContext, createContext } from 'react';\nexport var SidebarContext = createContext();\nexport function SidebarProvider(_ref) {\n  var children = _ref.children,\n      defaultItem = _ref.defaultItem;\n\n  var _useState = useState(defaultItem),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentItem = _useState2[0],\n      setCurrentItem = _useState2[1];\n\n  useEffect(function () {\n    if (defaultItem !== currentItem) {\n      return setCurrentItem(defaultItem);\n    }\n  }, [currentItem, defaultItem]);\n  return /*#__PURE__*/React.createElement(SidebarContext.Provider, {\n    value: {\n      currentItem,\n      setCurrentItem\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, children);\n}\nexport var useSidebar = function useSidebar() {\n  var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      isCollapsible = _ref2.isCollapsible,\n      item = _ref2.item,\n      _ref2$items = _ref2.items,\n      items = _ref2$items === void 0 ? [] : _ref2$items;\n\n  var _useContext = useContext(SidebarContext),\n      currentItem = _useContext.currentItem,\n      setCurrentItem = _useContext.setCurrentItem;\n\n  var isActive = item === currentItem || items.includes(currentItem);\n\n  var _useState3 = useState(isActive),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isExpanded = _useState4[0],\n      setIsExpanded = _useState4[1];\n\n  useEffect(function () {\n    if (!isActive && isExpanded) {\n      return setIsExpanded(false);\n    }\n\n    if (isActive && !isExpanded) {\n      return setIsExpanded(true);\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [currentItem]);\n\n  var onItemClick = function onItemClick() {\n    if (!isCollapsible) {\n      setCurrentItem(item);\n    }\n\n    setIsExpanded(function (prev) {\n      return !prev;\n    });\n  };\n\n  return {\n    isExpanded,\n    isActive,\n    onItemClick\n  };\n};","map":{"version":3,"sources":["D:/Files/DBOT/src/hooks/useSidebar.js"],"names":["React","useState","useEffect","useContext","createContext","SidebarContext","SidebarProvider","children","defaultItem","currentItem","setCurrentItem","useSidebar","isCollapsible","item","items","isActive","includes","isExpanded","setIsExpanded","onItemClick","prev"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,EAAiDC,aAAjD,QAAsE,OAAtE;AAEA,OAAO,IAAMC,cAAc,GAAGD,aAAa,EAApC;AAEP,OAAO,SAASE,eAAT,OAAoD;AAAA,MAAzBC,QAAyB,QAAzBA,QAAyB;AAAA,MAAfC,WAAe,QAAfA,WAAe;;AAAA,kBACjBP,QAAQ,CAACO,WAAD,CADS;AAAA;AAAA,MAChDC,WADgD;AAAA,MACnCC,cADmC;;AAEvDR,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAIM,WAAW,KAAKC,WAApB,EAAiC;AAC7B,aAAOC,cAAc,CAACF,WAAD,CAArB;AACH;AACJ,GAJQ,EAIN,CAACC,WAAD,EAAcD,WAAd,CAJM,CAAT;AAKA,sBACI,oBAAC,cAAD,CAAgB,QAAhB;AAAyB,IAAA,KAAK,EAAE;AAAEC,MAAAA,WAAF;AAAeC,MAAAA;AAAf,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKH,QADL,CADJ;AAKH;AAED,OAAO,IAAMI,UAAU,GAAG,SAAbA,UAAa,GAA8C;AAAA,kFAAP,EAAO;AAAA,MAA3CC,aAA2C,SAA3CA,aAA2C;AAAA,MAA5BC,IAA4B,SAA5BA,IAA4B;AAAA,0BAAtBC,KAAsB;AAAA,MAAtBA,KAAsB,4BAAd,EAAc;;AAAA,oBAC5BX,UAAU,CAACE,cAAD,CADkB;AAAA,MAC5DI,WAD4D,eAC5DA,WAD4D;AAAA,MAC/CC,cAD+C,eAC/CA,cAD+C;;AAEpE,MAAMK,QAAQ,GAAGF,IAAI,KAAKJ,WAAT,IAAwBK,KAAK,CAACE,QAAN,CAAeP,WAAf,CAAzC;;AAFoE,mBAGhCR,QAAQ,CAACc,QAAD,CAHwB;AAAA;AAAA,MAG7DE,UAH6D;AAAA,MAGjDC,aAHiD;;AAKpEhB,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAI,CAACa,QAAD,IAAaE,UAAjB,EAA6B;AACzB,aAAOC,aAAa,CAAC,KAAD,CAApB;AACH;;AACD,QAAIH,QAAQ,IAAI,CAACE,UAAjB,EAA6B;AACzB,aAAOC,aAAa,CAAC,IAAD,CAApB;AACH,KANW,CAOZ;;AACH,GARQ,EAQN,CAACT,WAAD,CARM,CAAT;;AAUA,MAAMU,WAAW,GAAG,SAAdA,WAAc,GAAM;AACtB,QAAI,CAACP,aAAL,EAAoB;AAChBF,MAAAA,cAAc,CAACG,IAAD,CAAd;AACH;;AACDK,IAAAA,aAAa,CAAC,UAACE,IAAD;AAAA,aAAU,CAACA,IAAX;AAAA,KAAD,CAAb;AACH,GALD;;AAOA,SAAO;AACHH,IAAAA,UADG;AAEHF,IAAAA,QAFG;AAGHI,IAAAA;AAHG,GAAP;AAKH,CA3BM","sourcesContent":["import React, { useState, useEffect, useContext, createContext } from 'react';\n\nexport const SidebarContext = createContext();\n\nexport function SidebarProvider({ children, defaultItem }) {\n    const [currentItem, setCurrentItem] = useState(defaultItem);\n    useEffect(() => {\n        if (defaultItem !== currentItem) {\n            return setCurrentItem(defaultItem);\n        }\n    }, [currentItem, defaultItem]);\n    return (\n        <SidebarContext.Provider value={{ currentItem, setCurrentItem }}>\n            {children}\n        </SidebarContext.Provider>\n    );\n}\n\nexport const useSidebar = ({ isCollapsible, item, items = [] } = {}) => {\n    const { currentItem, setCurrentItem } = useContext(SidebarContext);\n    const isActive = item === currentItem || items.includes(currentItem);\n    const [isExpanded, setIsExpanded] = useState(isActive);\n\n    useEffect(() => {\n        if (!isActive && isExpanded) {\n            return setIsExpanded(false);\n        }\n        if (isActive && !isExpanded) {\n            return setIsExpanded(true);\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [currentItem]);\n\n    const onItemClick = () => {\n        if (!isCollapsible) {\n            setCurrentItem(item);\n        }\n        setIsExpanded((prev) => !prev);\n    };\n\n    return {\n        isExpanded,\n        isActive,\n        onItemClick\n    };\n};\n"]},"metadata":{},"sourceType":"module"}