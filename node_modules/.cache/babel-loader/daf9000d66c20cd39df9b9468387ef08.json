{"ast":null,"code":"import _objectSpread from \"D:\\\\Files\\\\DBOT\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"D:\\\\Files\\\\DBOT\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"D:\\\\Files\\\\DBOT\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"D:\\\\Files\\\\DBOT\\\\src\\\\components\\\\collapsible\\\\CollapsibleContent.js\";\nimport React, { useEffect, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useScrollHeight } from 'react-collapsible-content';\nvar STATUS = {\n  COLLAPSED: 'COLLAPSED',\n  PRE_EXPANDED: 'PRE_EXPANDED',\n  EXPANDED: 'EXPANDED',\n  PRE_COLLAPSED: 'PRE_COLLAPSED'\n};\n\nfunction CollapsibleContent(_ref) {\n  var children = _ref.children,\n      expanded = _ref.expanded,\n      style = _ref.style,\n      transitionDuration = _ref.transitionDuration,\n      transitionTimingFunction = _ref.transitionTimingFunction,\n      onTransitionStart = _ref.onTransitionStart,\n      onTransitionEnd = _ref.onTransitionEnd,\n      others = _objectWithoutProperties(_ref, [\"children\", \"expanded\", \"style\", \"transitionDuration\", \"transitionTimingFunction\", \"onTransitionStart\", \"onTransitionEnd\"]);\n\n  var contentContainerRef = useRef(null);\n\n  var _useState = useState(expanded ? STATUS.EXPANDED : STATUS.COLLAPSED),\n      _useState2 = _slicedToArray(_useState, 2),\n      status = _useState2[0],\n      setStatus = _useState2[1];\n\n  var _useScrollHeight = useScrollHeight(contentContainerRef, {\n    onTransitionStart,\n    onTransitionEnd\n  }),\n      scrollHeight = _useScrollHeight.scrollHeight;\n\n  var transitionStyles;\n\n  switch (status) {\n    case STATUS.EXPANDED:\n      transitionStyles = {\n        maxHeight: '100vh',\n        transitionDuration: '.001s'\n      };\n      break;\n\n    case STATUS.PRE_COLLAPSED:\n      transitionStyles = {\n        maxHeight: scrollHeight,\n        transitionDuration: '.001s'\n      };\n      break;\n\n    case STATUS.PRE_EXPANDED:\n      transitionStyles = {\n        maxHeight: scrollHeight\n      };\n      break;\n\n    case STATUS.COLLAPSED:\n      transitionStyles = {\n        maxHeight: 0\n      };\n      break;\n\n    default:\n      transitionStyles = {\n        maxHeight: scrollHeight,\n        transitionDuration: '.001s'\n      };\n  }\n\n  useEffect(function () {\n    if (expanded) {\n      if (status === STATUS.COLLAPSED) {\n        setStatus(STATUS.PRE_EXPANDED);\n      } else if (status === STATUS.PRE_EXPANDED) {\n        setTimeout(function () {\n          return setStatus(STATUS.EXPANDED);\n        }, 800);\n      }\n    } else if (!expanded) {\n      if (status === STATUS.EXPANDED) {\n        setStatus(STATUS.PRE_COLLAPSED);\n      } else if (status === STATUS.PRE_COLLAPSED) {\n        setTimeout(function () {\n          return setStatus(STATUS.COLLAPSED);\n        }, 100);\n      }\n    }\n  }, [expanded, status]);\n  return /*#__PURE__*/React.createElement(\"div\", Object.assign({}, others, {\n    style: _objectSpread(_objectSpread({\n      overflow: 'hidden',\n      transitionProperty: 'max-height',\n      transitionTimingFunction,\n      transitionDuration\n    }, transitionStyles), style),\n    ref: contentContainerRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }), children);\n}\n\nCollapsibleContent.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.element), PropTypes.element]).isRequired,\n  expanded: PropTypes.bool,\n  onTransitionStart: PropTypes.func,\n  onTransitionEnd: PropTypes.func,\n  style: PropTypes.object,\n  transitionDuration: PropTypes.string,\n  transitionTimingFunction: PropTypes.string\n};\nCollapsibleContent.defaultProps = {\n  transitionDuration: '.425s',\n  transitionTimingFunction: 'ease-in-out'\n};\nexport default CollapsibleContent;","map":{"version":3,"sources":["D:/Files/DBOT/src/components/collapsible/CollapsibleContent.js"],"names":["React","useEffect","useRef","useState","PropTypes","useScrollHeight","STATUS","COLLAPSED","PRE_EXPANDED","EXPANDED","PRE_COLLAPSED","CollapsibleContent","children","expanded","style","transitionDuration","transitionTimingFunction","onTransitionStart","onTransitionEnd","others","contentContainerRef","status","setStatus","scrollHeight","transitionStyles","maxHeight","setTimeout","overflow","transitionProperty","propTypes","oneOfType","arrayOf","element","isRequired","bool","func","object","string","defaultProps"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useScrollHeight } from 'react-collapsible-content';\n\nconst STATUS = {\n    COLLAPSED: 'COLLAPSED',\n    PRE_EXPANDED: 'PRE_EXPANDED',\n    EXPANDED: 'EXPANDED',\n    PRE_COLLAPSED: 'PRE_COLLAPSED'\n};\n\nfunction CollapsibleContent({\n    children,\n    expanded,\n    style,\n    transitionDuration,\n    transitionTimingFunction,\n    onTransitionStart,\n    onTransitionEnd,\n    ...others\n}) {\n    const contentContainerRef = useRef(null);\n    const [status, setStatus] = useState(expanded ? STATUS.EXPANDED : STATUS.COLLAPSED);\n    const { scrollHeight } = useScrollHeight(contentContainerRef, {\n        onTransitionStart,\n        onTransitionEnd\n    });\n    let transitionStyles;\n    switch (status) {\n        case STATUS.EXPANDED:\n            transitionStyles = { maxHeight: '100vh', transitionDuration: '.001s' };\n            break;\n        case STATUS.PRE_COLLAPSED:\n            transitionStyles = { maxHeight: scrollHeight, transitionDuration: '.001s' };\n            break;\n        case STATUS.PRE_EXPANDED:\n            transitionStyles = { maxHeight: scrollHeight };\n            break;\n        case STATUS.COLLAPSED:\n            transitionStyles = { maxHeight: 0 };\n            break;\n        default:\n            transitionStyles = { maxHeight: scrollHeight, transitionDuration: '.001s' };\n    }\n\n    useEffect(() => {\n        if (expanded) {\n            if (status === STATUS.COLLAPSED) {\n                setStatus(STATUS.PRE_EXPANDED);\n            } else if (status === STATUS.PRE_EXPANDED) {\n                setTimeout(() => setStatus(STATUS.EXPANDED), 800);\n            }\n        } else if (!expanded) {\n            if (status === STATUS.EXPANDED) {\n                setStatus(STATUS.PRE_COLLAPSED);\n            } else if (status === STATUS.PRE_COLLAPSED) {\n                setTimeout(() => setStatus(STATUS.COLLAPSED), 100);\n            }\n        }\n    }, [expanded, status]);\n\n    return (\n        <div\n            {...others}\n            style={{\n                overflow: 'hidden',\n                transitionProperty: 'max-height',\n                transitionTimingFunction,\n                transitionDuration,\n                ...transitionStyles,\n                ...style\n            }}\n            ref={contentContainerRef}\n        >\n            {children}\n        </div>\n    );\n}\n\nCollapsibleContent.propTypes = {\n    children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.element), PropTypes.element])\n        .isRequired,\n    expanded: PropTypes.bool,\n    onTransitionStart: PropTypes.func,\n    onTransitionEnd: PropTypes.func,\n    style: PropTypes.object,\n    transitionDuration: PropTypes.string,\n    transitionTimingFunction: PropTypes.string\n};\n\nCollapsibleContent.defaultProps = {\n    transitionDuration: '.425s',\n    transitionTimingFunction: 'ease-in-out'\n};\n\nexport default CollapsibleContent;\n"]},"metadata":{},"sourceType":"module"}