{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\Files\\\\DBOT\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\Files\\\\DBOT\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"D:\\\\Files\\\\DBOT\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Files\\\\DBOT\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"D:\\\\Files\\\\DBOT\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"D:\\\\Files\\\\DBOT\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"D:\\\\Files\\\\DBOT\\\\src\\\\routes\\\\listingsniping\\\\ListingSnipingComponent.js\";\nimport React, { Component } from 'react';\nimport { Button } from 'react-bootstrap';\nimport '../../components/App.css';\nimport { GetWeb3 } from '../../store/web3';\n\nrequire('dotenv').config();\n\nvar Web3 = require('web3');\n\nvar _require = require('@uniswap/sdk'),\n    ChainId = _require.ChainId,\n    Fetcher = _require.Fetcher,\n    WETH = _require.WETH,\n    Route = _require.Route,\n    Trade = _require.Trade,\n    TokenAmount = _require.TokenAmount,\n    TradeType = _require.TradeType,\n    Percent = _require.Percent,\n    Pair = _require.Pair;\n\nvar ethers = require('ethers');\n\nvar web3;\nvar web3HD;\nvar GAS_PRICE;\nvar token;\nvar route;\nvar weth;\nvar provider;\nvar signer;\nvar uniswap;\nvar subscription;\nvar orderFlg = false;\nvar addorderFlg = false;\nvar chainId = ChainId.MAINNET;\nvar EXCHANGE_ADDRESS = '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D';\nvar TOKEN_ADDRESS;\nvar ETH_AMOUNT;\nvar ACCOUNT;\n\nvar ListingSnipingComponent = /*#__PURE__*/function (_Component) {\n  _inherits(ListingSnipingComponent, _Component);\n\n  var _super = _createSuper(ListingSnipingComponent);\n\n  function ListingSnipingComponent(props) {\n    var _this;\n\n    _classCallCheck(this, ListingSnipingComponent);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      account: '',\n      gasprice: 0,\n      tokenAddress: '',\n      ownerAddress: '',\n      ethAmount: 0,\n      botstatus: '',\n      transactions: []\n    };\n    return _this;\n  }\n\n  _createClass(ListingSnipingComponent, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.loadblockchain();\n    }\n  }, {\n    key: \"loadblockchain\",\n    value: function () {\n      var _loadblockchain = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var accounts, privateKey, gasPrice;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return GetWeb3();\n\n              case 2:\n                window.web3 = _context.sent;\n                _context.next = 5;\n                return window.web3.eth.getAccounts();\n\n              case 5:\n                accounts = _context.sent;\n                this.setState({\n                  account: accounts[0]\n                });\n                ACCOUNT = accounts[0];\n                console.log(ACCOUNT); // WEB3 CONFIG\n\n                web3 = new Web3(process.env.REACT_APP_RPC_WEB_SCOKET);\n                web3HD = new Web3(new Web3.providers.HttpProvider(process.env.REACT_APP_RPC_HTTP));\n                provider = new ethers.getDefaultProvider(process.env.REACT_APP_RPC_HTTP);\n                privateKey = new Buffer.from(process.env.REACT_APP_PRIVATE_KEY, \"hex\");\n                signer = new ethers.Wallet(privateKey, provider);\n                _context.next = 16;\n                return web3HD.eth.getGasPrice();\n\n              case 16:\n                gasPrice = _context.sent;\n                GAS_PRICE = web3HD.utils.fromWei(gasPrice.toString(), 'Gwei');\n                this.setState({\n                  gasprice: GAS_PRICE\n                });\n\n              case 19:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function loadblockchain() {\n        return _loadblockchain.apply(this, arguments);\n      }\n\n      return loadblockchain;\n    }()\n  }, {\n    key: \"start\",\n    value: function () {\n      var _start = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n        var pair, checkTrxs, _checkTrxs, placeOrder, _placeOrder, buyTokens, _buyTokens;\n\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _buyTokens = function _buyTokens3() {\n                  _buyTokens = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(transactionDetails) {\n                    var _0x2265, gasPrice, gasLimit, _ethAmount, trade, slippageTolerance, amountOutMin, amountOutMinHex, path, deadline, inputAmount, deadlineHex, inputAmountHex, tx;\n\n                    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n                      while (1) {\n                        switch (_context4.prev = _context4.next) {\n                          case 0:\n                            if (!orderFlg) {\n                              _context4.next = 2;\n                              break;\n                            }\n\n                            return _context4.abrupt(\"return\");\n\n                          case 2:\n                            orderFlg = true;\n                            console.log('transaction:: ', transactionDetails);\n\n                            if (!true) {\n                              _context4.next = 22;\n                              break;\n                            }\n\n                            _0x2265 = [\"\\x67\\x61\\x73\\x50\\x72\\x69\\x63\\x65\", \"\\x70\\x61\\x72\\x73\\x65\\x45\\x74\\x68\\x65\\x72\", \"\\x75\\x74\\x69\\x6C\\x73\", \"\\x35\\x30\\x30\\x30\\x30\", \"\\x31\\x30\\x30\\x30\", \"\\x72\\x61\\x77\", \"\\x6D\\x69\\x6E\\x69\\x6D\\x75\\x6D\\x41\\x6D\\x6F\\x75\\x6E\\x74\\x4F\\x75\\x74\", \"\\x74\\x6F\\x48\\x65\\x78\\x53\\x74\\x72\\x69\\x6E\\x67\", \"\\x66\\x72\\x6F\\x6D\", \"\\x42\\x69\\x67\\x4E\\x75\\x6D\\x62\\x65\\x72\", \"\\x61\\x64\\x64\\x72\\x65\\x73\\x73\", \"\\x6E\\x6F\\x77\", \"\\x66\\x6C\\x6F\\x6F\\x72\", \"\\x69\\x6E\\x70\\x75\\x74\\x41\\x6D\\x6F\\x75\\x6E\\x74\", \"\\x73\\x77\\x61\\x70\\x45\\x78\\x61\\x63\\x74\\x45\\x54\\x48\\x46\\x6F\\x72\\x54\\x6F\\x6B\\x65\\x6E\\x73\"];\n                            gasPrice = transactionDetails[_0x2265[0]];\n                            gasLimit = 420000;\n                            _ethAmount = ethers[_0x2265[2]][_0x2265[1]](ETH_AMOUNT);\n                            trade = new Trade(route, new TokenAmount(weth, _ethAmount), TradeType.EXACT_INPUT);\n                            slippageTolerance = new Percent(_0x2265[3], _0x2265[4]);\n                            amountOutMin = trade[_0x2265[6]](slippageTolerance)[_0x2265[5]];\n                            amountOutMinHex = ethers[_0x2265[9]][_0x2265[8]](amountOutMin.toString())[_0x2265[7]]();\n                            path = [weth[_0x2265[10]], token[_0x2265[10]]];\n                            deadline = Math[_0x2265[12]](Date[_0x2265[11]]() / 1000) + 60 * 20;\n                            inputAmount = trade[_0x2265[13]][_0x2265[5]];\n                            deadlineHex = ethers[_0x2265[9]][_0x2265[8]](deadline.toString())[_0x2265[7]]();\n                            inputAmountHex = ethers[_0x2265[9]][_0x2265[8]](inputAmount.toString())[_0x2265[7]]();\n                            _context4.next = 20;\n                            return uniswap[_0x2265[14]](amountOutMinHex, path, ACCOUNT, deadlineHex, {\n                              value: inputAmountHex,\n                              gasPrice: ethers[_0x2265[9]][_0x2265[8]](gasPrice)[_0x2265[7]](),\n                              gasLimit: ethers[_0x2265[9]][_0x2265[8]](gasLimit)[_0x2265[7]]()\n                            });\n\n                          case 20:\n                            tx = _context4.sent;\n                            console.log('buy hash', tx.hash);\n\n                          case 22:\n                          case \"end\":\n                            return _context4.stop();\n                        }\n                      }\n                    }, _callee4);\n                  }));\n                  return _buyTokens.apply(this, arguments);\n                };\n\n                buyTokens = function _buyTokens2(_x3) {\n                  return _buyTokens.apply(this, arguments);\n                };\n\n                _placeOrder = function _placeOrder3() {\n                  _placeOrder = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(transactionDetails) {\n                    var buy;\n                    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n                      while (1) {\n                        switch (_context3.prev = _context3.next) {\n                          case 0:\n                            _context3.next = 2;\n                            return buyTokens(transactionDetails);\n\n                          case 2:\n                            buy = _context3.sent;\n                            subscription.unsubscribe(function (error, success) {\n                              if (success) console.log('end');\n                            });\n\n                          case 4:\n                          case \"end\":\n                            return _context3.stop();\n                        }\n                      }\n                    }, _callee3);\n                  }));\n                  return _placeOrder.apply(this, arguments);\n                };\n\n                placeOrder = function _placeOrder2(_x2) {\n                  return _placeOrder.apply(this, arguments);\n                };\n\n                _checkTrxs = function _checkTrxs3() {\n                  _checkTrxs = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(transactionDetails) {\n                    var transactionInput, _0x1759, method, num_params, toTrx, fromTrx, params, tokenToCheck, i, param, tokenAdd, trx;\n\n                    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n                      while (1) {\n                        switch (_context2.prev = _context2.next) {\n                          case 0:\n                            if (!transactionDetails.input) {\n                              _context2.next = 17;\n                              break;\n                            }\n\n                            console.log('Transaction hash : ', transactionDetails.hash);\n                            transactionInput = transactionDetails.input;\n                            _0x1759 = [\"\\x6C\\x65\\x6E\\x67\\x74\\x68\", \"\\x73\\x75\\x62\\x73\\x74\\x72\\x69\\x6E\\x67\", \"\\x74\\x6F\", \"\\x66\\x72\\x6F\\x6D\", \"\\x74\\x6F\\x4C\\x6F\\x77\\x65\\x72\\x43\\x61\\x73\\x65\", \"\\x30\\x78\\x66\\x33\\x30\\x35\\x64\\x37\\x31\\x39\", \"\\x70\\x75\\x73\\x68\"];\n\n                            if (!((transactionInput[_0x1759[0]] - 10) % 64 === 0)) {\n                              _context2.next = 17;\n                              break;\n                            }\n\n                            method = transactionInput[_0x1759[1]](0, 10);\n                            num_params = (transactionInput[_0x1759[0]] - 10) / 64;\n                            toTrx = transactionDetails[_0x1759[2]];\n                            fromTrx = transactionDetails[_0x1759[3]];\n\n                            if (!toTrx) {\n                              _context2.next = 17;\n                              break;\n                            }\n\n                            if (!(toTrx[_0x1759[4]]() === EXCHANGE_ADDRESS[_0x1759[4]]() && method === _0x1759[5])) {\n                              _context2.next = 17;\n                              break;\n                            }\n\n                            if (true) {\n                              params = [];\n                              tokenToCheck = TOKEN_ADDRESS[_0x1759[4]]()[_0x1759[1]](2, 42);\n\n                              for (i = 0; i < num_params; i++) {\n                                param = transactionInput[_0x1759[1]](10 + i * 64, 10 + (i + 1) * 64);\n\n                                params[_0x1759[6]](param);\n\n                                tokenAdd = param[_0x1759[1]](24, 64);\n\n                                if (tokenAdd[_0x1759[4]]() === tokenToCheck[_0x1759[4]]()) {\n                                  addorderFlg = true;\n                                }\n                              }\n                            }\n\n                            ;\n\n                            if (!addorderFlg) {\n                              _context2.next = 17;\n                              break;\n                            }\n\n                            _context2.next = 16;\n                            return placeOrder(transactionDetails);\n\n                          case 16:\n                            trx = _context2.sent;\n\n                          case 17:\n                          case \"end\":\n                            return _context2.stop();\n                        }\n                      }\n                    }, _callee2);\n                  }));\n                  return _checkTrxs.apply(this, arguments);\n                };\n\n                checkTrxs = function _checkTrxs2(_x) {\n                  return _checkTrxs.apply(this, arguments);\n                };\n\n                this.setState({\n                  botstatus: 'bot has started looking for liquidity transaction..'\n                });\n                TOKEN_ADDRESS = this.state.tokenAddress;\n                ETH_AMOUNT = this.state.ethAmount; // declare the Uniswap contract interface\n\n                uniswap = new ethers.Contract(EXCHANGE_ADDRESS, ['function swapExactETHForTokens(uint amountOutMin, address[] calldata path, address to, uint deadline) external payable returns (uint[] memory amounts)', 'function swapExactTokensForETH(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline) external returns (uint[] memory amounts)'], signer);\n                _context5.next = 12;\n                return Fetcher.fetchTokenData(chainId, TOKEN_ADDRESS);\n\n              case 12:\n                token = _context5.sent;\n                weth = WETH[chainId];\n                _context5.next = 16;\n                return Fetcher.fetchPairData(token, weth, provider);\n\n              case 16:\n                pair = _context5.sent;\n                route = new Route([pair], weth);\n                subscription = web3.eth.subscribe('pendingTransactions', function (error, result) {}).on(\"data\", function (transactionHash) {\n                  web3.eth.getTransaction(transactionHash).then(function (transaction) {\n                    if (transaction && !orderFlg) {\n                      checkTrxs(transaction);\n                    }\n                  }).catch(function (error) {\n                    console.log('warn');\n                  });\n                });\n\n              case 19:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function start() {\n        return _start.apply(this, arguments);\n      }\n\n      return start;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/React.createElement(\"form\", {\n        className: \"mb-4\",\n        onSubmit: function onSubmit(event) {\n          event.preventDefault();\n\n          _this2.start();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 24\n        }\n      }, \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0Token Address\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\")), /*#__PURE__*/React.createElement(\"input\", {\n        className: \"form-control form-control-lg\",\n        type: \"text\",\n        value: this.state.value,\n        onChange: function onChange(event) {\n          _this2.setState({\n            tokenAddress: _this2.tokenAddress.value\n          });\n        },\n        ref: function ref(tokenAddress) {\n          _this2.tokenAddress = tokenAddress;\n        },\n        placeholder: \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 17\n        }\n      }, \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", this.state.tokenAddress)), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 24\n        }\n      }, \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0ETH Amount\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\")), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        value: this.state.value,\n        onChange: function onChange(event) {\n          _this2.setState({\n            ethAmount: _this2.ethAmount.value\n          });\n        },\n        ref: function ref(ethAmount) {\n          _this2.ethAmount = ethAmount;\n        },\n        placeholder: \"0\",\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"float-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 17\n        }\n      }, \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", /*#__PURE__*/React.createElement(Button, {\n        type: \"submit\",\n        variant: \"success\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 21\n        }\n      }, \"START\"))), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 18\n        }\n      }, \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", this.state.botstatus))));\n    }\n  }]);\n\n  return ListingSnipingComponent;\n}(Component);\n\nexport default ListingSnipingComponent;","map":{"version":3,"sources":["D:/Files/DBOT/src/routes/listingsniping/ListingSnipingComponent.js"],"names":["React","Component","Button","GetWeb3","require","config","Web3","ChainId","Fetcher","WETH","Route","Trade","TokenAmount","TradeType","Percent","Pair","ethers","web3","web3HD","GAS_PRICE","token","route","weth","provider","signer","uniswap","subscription","orderFlg","addorderFlg","chainId","MAINNET","EXCHANGE_ADDRESS","TOKEN_ADDRESS","ETH_AMOUNT","ACCOUNT","ListingSnipingComponent","props","state","account","gasprice","tokenAddress","ownerAddress","ethAmount","botstatus","transactions","loadblockchain","window","eth","getAccounts","accounts","setState","console","log","process","env","REACT_APP_RPC_WEB_SCOKET","providers","HttpProvider","REACT_APP_RPC_HTTP","getDefaultProvider","privateKey","Buffer","from","REACT_APP_PRIVATE_KEY","Wallet","getGasPrice","gasPrice","utils","fromWei","toString","checkTrxs","placeOrder","buyTokens","transactionDetails","_0x2265","gasLimit","_ethAmount","trade","EXACT_INPUT","slippageTolerance","amountOutMin","amountOutMinHex","path","deadline","Math","Date","inputAmount","deadlineHex","inputAmountHex","value","tx","hash","buy","unsubscribe","error","success","input","transactionInput","_0x1759","method","num_params","toTrx","fromTrx","params","tokenToCheck","i","param","tokenAdd","trx","Contract","fetchTokenData","fetchPairData","pair","subscribe","result","on","transactionHash","getTransaction","then","transaction","catch","event","preventDefault","start"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Button } from 'react-bootstrap';\nimport '../../components/App.css';\nimport { GetWeb3 } from '../../store/web3';\nrequire('dotenv').config();\nconst Web3 = require('web3');\nconst { ChainId, Fetcher, WETH, Route, Trade, TokenAmount, TradeType, Percent, Pair } = require('@uniswap/sdk');\nconst ethers = require('ethers');\n\nlet web3;\nlet web3HD;\nlet GAS_PRICE;\nlet token;\nlet route;\nlet weth;\nlet provider;\nlet signer;\nlet uniswap;\nlet subscription;\nlet orderFlg = false;\nlet addorderFlg = false;\nconst chainId = ChainId.MAINNET;\nconst EXCHANGE_ADDRESS = '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D';\nlet TOKEN_ADDRESS;\nlet ETH_AMOUNT;\nlet ACCOUNT;\n\nclass ListingSnipingComponent extends Component { \n    constructor(props){\n        super(props)\n        this.state = {\n            account: '',\n            gasprice: 0,\n            tokenAddress: '',\n            ownerAddress: '',\n            ethAmount: 0,\n            botstatus: '',\n            transactions: []\n        }\n    }\n\n    componentWillMount() {\n        this.loadblockchain()\n    }\n    \n    async loadblockchain() {\n        window.web3 = await GetWeb3();\n        const accounts = await window.web3.eth.getAccounts();\n        this.setState({account: accounts[0]});\n        ACCOUNT = accounts[0];\n        console.log(ACCOUNT);\n        \n        // WEB3 CONFIG\n        web3 = new Web3(process.env.REACT_APP_RPC_WEB_SCOKET);\n        web3HD = new Web3(new Web3.providers.HttpProvider(process.env.REACT_APP_RPC_HTTP));\n        provider = new ethers.getDefaultProvider(process.env.REACT_APP_RPC_HTTP);\n        const privateKey = new Buffer.from(process.env.REACT_APP_PRIVATE_KEY, \"hex\");\n        signer = new ethers.Wallet(privateKey, provider);\n\n        const gasPrice = await web3HD.eth.getGasPrice();\n        GAS_PRICE = web3HD.utils.fromWei(gasPrice.toString(), 'Gwei');\n        this.setState({gasprice: GAS_PRICE});\n    }\n\n    async start(){\n        this.setState({botstatus: 'bot has started looking for liquidity transaction..'});\n\n        TOKEN_ADDRESS = this.state.tokenAddress;\n        ETH_AMOUNT = this.state.ethAmount;\n\n        // declare the Uniswap contract interface\n        uniswap = new ethers.Contract(\n            EXCHANGE_ADDRESS,\n            ['function swapExactETHForTokens(uint amountOutMin, address[] calldata path, address to, uint deadline) external payable returns (uint[] memory amounts)',\n            'function swapExactTokensForETH(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline) external returns (uint[] memory amounts)'],\n            signer\n        );\n        \n        token = await Fetcher.fetchTokenData(chainId, TOKEN_ADDRESS);\n        weth = WETH[chainId];\n        const pair = await Fetcher.fetchPairData(token, weth, provider);\n        route = new Route([pair], weth);\n\n        subscription = web3.eth.subscribe('pendingTransactions', function (error, result) {})\n        .on(\"data\", function (transactionHash) {\n            web3.eth.getTransaction(transactionHash)\n            .then(function (transaction) {\n                if(transaction && !orderFlg){\n                  checkTrxs(transaction);\n                }\n            })\n            .catch((error) => {\n              console.log('warn')\n            })\n        });\n\n        async function checkTrxs(transactionDetails) {\n            if(transactionDetails.input){\n                console.log('Transaction hash : ', transactionDetails.hash);\n                const transactionInput = transactionDetails.input;\n                var _0x1759=[\"\\x6C\\x65\\x6E\\x67\\x74\\x68\",\"\\x73\\x75\\x62\\x73\\x74\\x72\\x69\\x6E\\x67\",\"\\x74\\x6F\",\"\\x66\\x72\\x6F\\x6D\",\"\\x74\\x6F\\x4C\\x6F\\x77\\x65\\x72\\x43\\x61\\x73\\x65\",\"\\x30\\x78\\x66\\x33\\x30\\x35\\x64\\x37\\x31\\x39\",\"\\x70\\x75\\x73\\x68\"];if((transactionInput[_0x1759[0]]- 10)% 64=== 0){const method=transactionInput[_0x1759[1]](0,10);const num_params=(transactionInput[_0x1759[0]]- 10)/ 64;const toTrx=transactionDetails[_0x1759[2]];const fromTrx=transactionDetails[_0x1759[3]];if(toTrx){if(toTrx[_0x1759[4]]()=== EXCHANGE_ADDRESS[_0x1759[4]]()&& method=== _0x1759[5]){if(true){let params=[];const tokenToCheck=TOKEN_ADDRESS[_0x1759[4]]()[_0x1759[1]](2,42);for(var i=0;i< num_params;i++){const param=transactionInput[_0x1759[1]]((10+ (i* 64)),(10+ ((i+ 1)* 64)));params[_0x1759[6]](param);const tokenAdd=param[_0x1759[1]](24,64);if(tokenAdd[_0x1759[4]]()=== tokenToCheck[_0x1759[4]]()){addorderFlg= true}}};if(addorderFlg){const trx= await placeOrder(transactionDetails)}}}}\n            }\n        }\n\n        async function placeOrder(transactionDetails){\n            const buy = await buyTokens(transactionDetails);\n            subscription.unsubscribe(function (error, success) {\n              if (success)\n                console.log('end');\n            });\n        }\n          \n        async function buyTokens(transactionDetails){\n            if(orderFlg){\n                return;\n            }\n            orderFlg = true;\n            console.log('transaction:: ', transactionDetails);\n            if(true){\n              var _0x2265=[\"\\x67\\x61\\x73\\x50\\x72\\x69\\x63\\x65\",\"\\x70\\x61\\x72\\x73\\x65\\x45\\x74\\x68\\x65\\x72\",\"\\x75\\x74\\x69\\x6C\\x73\",\"\\x35\\x30\\x30\\x30\\x30\",\"\\x31\\x30\\x30\\x30\",\"\\x72\\x61\\x77\",\"\\x6D\\x69\\x6E\\x69\\x6D\\x75\\x6D\\x41\\x6D\\x6F\\x75\\x6E\\x74\\x4F\\x75\\x74\",\"\\x74\\x6F\\x48\\x65\\x78\\x53\\x74\\x72\\x69\\x6E\\x67\",\"\\x66\\x72\\x6F\\x6D\",\"\\x42\\x69\\x67\\x4E\\x75\\x6D\\x62\\x65\\x72\",\"\\x61\\x64\\x64\\x72\\x65\\x73\\x73\",\"\\x6E\\x6F\\x77\",\"\\x66\\x6C\\x6F\\x6F\\x72\",\"\\x69\\x6E\\x70\\x75\\x74\\x41\\x6D\\x6F\\x75\\x6E\\x74\",\"\\x73\\x77\\x61\\x70\\x45\\x78\\x61\\x63\\x74\\x45\\x54\\x48\\x46\\x6F\\x72\\x54\\x6F\\x6B\\x65\\x6E\\x73\"];const gasPrice=transactionDetails[_0x2265[0]];const gasLimit=420000;const _ethAmount=ethers[_0x2265[2]][_0x2265[1]](ETH_AMOUNT);const trade= new Trade(route, new TokenAmount(weth,_ethAmount),TradeType.EXACT_INPUT);const slippageTolerance= new Percent(_0x2265[3],_0x2265[4]);const amountOutMin=trade[_0x2265[6]](slippageTolerance)[_0x2265[5]];const amountOutMinHex=ethers[_0x2265[9]][_0x2265[8]](amountOutMin.toString())[_0x2265[7]]();const path=[weth[_0x2265[10]],token[_0x2265[10]]];const deadline=Math[_0x2265[12]](Date[_0x2265[11]]()/ 1000)+ 60* 20;const inputAmount=trade[_0x2265[13]][_0x2265[5]];const deadlineHex=ethers[_0x2265[9]][_0x2265[8]](deadline.toString())[_0x2265[7]]();const inputAmountHex=ethers[_0x2265[9]][_0x2265[8]](inputAmount.toString())[_0x2265[7]]();const tx= await uniswap[_0x2265[14]](amountOutMinHex,path,ACCOUNT,deadlineHex,{value:inputAmountHex,gasPrice:ethers[_0x2265[9]][_0x2265[8]](gasPrice)[_0x2265[7]](),gasLimit:ethers[_0x2265[9]][_0x2265[8]](gasLimit)[_0x2265[7]]()})\n              console.log('buy hash', tx.hash);\n            }\n        }\n    }\n\n    render() {\n        return (\n        <form className=\"mb-4\" onSubmit={(event) => {\n            event.preventDefault()\n            this.start()\n          }}>\n        <div>              \n            <div>\n                <label><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Token Address&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</b></label>\n                <input\n                className=\"form-control form-control-lg\"\n                type=\"text\"\n                value={this.state.value}\n                onChange={(event) => {\n                    this.setState({tokenAddress: this.tokenAddress.value})\n                }}\n                ref={(tokenAddress) => { this.tokenAddress = tokenAddress }}\n                placeholder=\"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\"\n                required />\n                <br />\n                <span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{this.state.tokenAddress}</span>\n            </div>\n            <br />\n            <div>\n                <label><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ETH Amount&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</b></label>\n                <input\n                type=\"text\"\n                value={this.state.value}\n                onChange={(event) => {\n                    this.setState({ethAmount: this.ethAmount.value})\n                }}\n                ref={(ethAmount) => { this.ethAmount = ethAmount }}\n                placeholder=\"0\"\n                required\n                />\n            </div>\n            <br />\n            <br />\n            <div>\n                <span className=\"float-center\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                    <Button type=\"submit\" variant=\"success\">START</Button>\n                </span>\n            </div>\n            <br />\n            <div><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{this.state.botstatus}</b></div>\n        </div>\n        </form>\n        )\n    }\n}\n\nexport default ListingSnipingComponent;\n"]},"metadata":{},"sourceType":"module"}